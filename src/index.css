@import 'reactflow/dist/style.css'; /* Import React Flow base styles */

          @tailwind base;
          @tailwind components;
          @tailwind utilities;

          /* Define Albor colors as CSS variables for SVG use */
          :root {
            --color-albor-orange: #F97316;
            --color-albor-glow: #FACC15;
            --color-albor-light-gray: #E5E7EB;
            --color-albor-dark-gray: #6B7280;
            --color-albor-bg-dark: #111827;
            --color-albor-deep-space: #0B0F19;
            --color-albor-star-white: rgba(255, 255, 255, 0.8);
            --color-albor-star-orange: rgba(251, 146, 60, 0.6);
            /* Add a blue/cyan for hologram effect */
            --color-hologram-blue: #22D3EE; /* Tailwind cyan-400 */
            --color-hologram-blue-dark: #0E7490; /* Tailwind cyan-700 */
            --color-hologram-accent: var(--color-albor-orange); /* Use Albor orange for accents */
          }


          body {
            font-family: 'Inter', sans-serif;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;

            /* Apply the combined space background from Tailwind config */
            @apply bg-albor-deep-space text-albor-light-gray;
            background-image: theme('backgroundImage.space-background');
            background-size: theme('backgroundSize.sunrise-size'), theme('backgroundSize.starfield-size-1'), theme('backgroundSize.starfield-size-2'), theme('backgroundSize.full');
            background-position: theme('backgroundPosition.sunrise-pos'), theme('backgroundPosition.stars-1'), theme('backgroundPosition.stars-2'), theme('backgroundPosition.full-pos');
            background-repeat: no-repeat, repeat, repeat, no-repeat;
            background-attachment: fixed; /* Keep background fixed during scroll */
          }

          /* Custom scrollbar styles using Albor colors */
          ::-webkit-scrollbar {
            width: 8px; /* Slightly wider */
            height: 8px;
          }
          ::-webkit-scrollbar-track {
            background: theme('colors.albor-deep-space'); /* Match deep space bg */
          }
          ::-webkit-scrollbar-thumb {
            background-color: theme('colors.albor-dark-gray'); /* Dark gray thumb */
            border-radius: 4px;
            border: 2px solid theme('colors.albor-deep-space'); /* Add border to match track */
          }
          ::-webkit-scrollbar-thumb:hover {
            background-color: theme('colors.albor-light-gray'); /* Lighter gray on hover */
          }
          * {
            scrollbar-width: thin;
            scrollbar-color: theme('colors.albor-dark-gray') theme('colors.albor-deep-space'); /* thumb track */
          }

          /* --- Hologram Map Styles --- */
          .hologram-map {
            /* Base styling */
            overflow: visible; /* Allow glow filters to extend beyond bounds */
          }

          .world-path {
            fill: none;
            stroke: var(--color-hologram-blue);
            stroke-width: 0.7; /* Thinner line */
            stroke-opacity: 0.6;
            /* Optional: Add subtle animation */
            /* animation: pulse 4s infinite ease-in-out; */
          }

          .graticule-group {
            /* Group styling if needed */
          }

          .graticule-line {
            fill: none;
            stroke: var(--color-hologram-blue-dark);
            stroke-width: 0.3; /* Very thin lines */
            stroke-opacity: 0.25;
            stroke-dasharray: 2, 3; /* Dashed lines for grid */
            pointer-events: none; /* Prevent grid lines interfering with drag */
          }
          .graticule-line.equator {
              stroke-opacity: 0.4;
              stroke-dasharray: none; /* Solid equator */
              stroke-width: 0.4;
          }

          .satellite-footprint {
            fill: url(#footprint-gradient);
            /* No stroke needed as gradient defines edge */
            mix-blend-mode: screen; /* Blend footprints nicely */
            opacity: 0.8;
            pointer-events: none; /* Prevent footprints interfering with drag */
          }

          .markers-group {
            /* Styling for the group containing markers */
          }

          .marker {
            cursor: pointer;
            transition: transform 0.2s ease-out;
          }
          .marker:hover {
            transform: scale(1.2) translateY(-1px); /* Slight lift on hover */
          }

          .marker-bg {
            /* Background circle for icons */
            fill: var(--color-albor-deep-space); /* Match background */
            stroke: var(--color-hologram-accent); /* Use accent color */
            stroke-width: 0.5;
            opacity: 0.7;
            transition: all 0.2s ease-out;
          }
          .marker:hover .marker-bg {
            stroke-width: 1;
            opacity: 1;
            fill: var(--color-albor-orange); /* Fill on hover */
          }

          .marker-icon {
            fill: var(--color-hologram-accent); /* Use accent color */
            opacity: 0.9;
            transition: fill 0.2s ease-out;
          }
          .marker:hover .marker-icon {
            opacity: 1;
            fill: var(--color-albor-deep-space); /* Icon color contrast on hover */
          }

          /* Optional Pulse Animation */
          @keyframes pulse {
            0% { stroke-opacity: 0.6; }
            50% { stroke-opacity: 0.9; }
            100% { stroke-opacity: 0.6; }
          }

          /* Fade-in animation for panels/cards */
          @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px) scale(0.98); }
            to { opacity: 1; transform: translateY(0) scale(1); }
          }
          .animate-fade-in {
            animation: fadeIn 0.2s ease-out forwards;
          }

          /* --- React Flow Customization --- */
          .react-flow__node {
            /* Remove default React Flow styles if applying Tailwind */
            background: none;
            border: none;
            padding: 0;
            font-size: 12px; /* Base font size */
            color: theme('colors.albor-light-gray');
            border-radius: theme('borderRadius.md'); /* Consistent rounding */
            transition: box-shadow 0.15s ease-in-out;
            /* Ensure nodes are above edges */
            z-index: 10;
          }

          .react-flow__node.selected {
            /* Style for selected nodes */
            box-shadow: 0 0 0 2px theme('colors.albor-orange');
            z-index: 11; /* Ensure selected node is on top */
          }

          .react-flow__edge path {
             /* Style for edges */
             stroke: theme('colors.albor-dark-gray');
             stroke-width: 1.5;
          }
          .react-flow__edge.selected path {
             /* Style for selected edges */
             stroke: theme('colors.albor-orange');
             stroke-width: 2;
          }
          /* Style for animated edges */
          .react-flow__edge.animated path {
              stroke-dasharray: 5;
              animation: dashdraw .5s linear infinite;
          }
          /* Style edge markers */
          .react-flow__arrowhead path {
              fill: var(--color-albor-dark-gray);
          }
          .react-flow__edge.selected .react-flow__arrowhead path {
              fill: var(--color-albor-orange);
          }


          .react-flow__handle {
            /* Style for connection handles */
            width: 8px;
            height: 8px;
            background-color: theme('colors.albor-dark-gray');
            border: 1px solid theme('colors.albor-bg-dark');
            border-radius: 2px; /* Slightly square */
            z-index: 12; /* Ensure handles are above nodes */
          }
          .react-flow__handle:hover {
              background-color: theme('colors.albor-orange');
              border-color: theme('colors.albor-orange');
          }
          .react-flow__handle-connecting {
              background-color: theme('colors.albor-orange');
          }

          /* Style React Flow Controls */
          .react-flow__controls {
              box-shadow: none;
          }
          .react-flow__controls button {
              background-color: theme('colors.albor-bg-dark/80');
              border: 1px solid theme('colors.albor-dark-gray/50');
              border-bottom: none;
              color: theme('colors.albor-light-gray');
              fill: theme('colors.albor-light-gray');
          }
          .react-flow__controls button:hover {
              background-color: theme('colors.albor-bg-dark');
          }
          .react-flow__controls button:last-of-type {
              border-bottom: 1px solid theme('colors.albor-dark-gray/50');
              border-bottom-left-radius: theme('borderRadius.md');
              border-bottom-right-radius: theme('borderRadius.md');
          }
           .react-flow__controls button:first-of-type {
              border-top-left-radius: theme('borderRadius.md');
              border-top-right-radius: theme('borderRadius.md');
          }

          /* Style React Flow MiniMap - Improved Styling */
          .react-flow__minimap.albor-minimap {
              background-color: theme('colors.albor-bg-dark/70'); /* Slightly more transparent */
              border: 1px solid theme('colors.albor-dark-gray/40'); /* Softer border */
              border-radius: theme('borderRadius.lg'); /* Larger radius */
              box-shadow: 0 2px 10px rgba(0,0,0,0.3); /* Add subtle shadow */
          }
          .react-flow__minimap-mask.albor-minimap-mask {
              fill: theme('colors.albor-bg-dark/60'); /* Darker mask */
              stroke: theme('colors.albor-orange/50'); /* Add subtle orange stroke */
              stroke-width: 1px;
          }
          /* Style nodes inside minimap */
          .react-flow__minimap-node.albor-minimap-node {
              fill: theme('colors.albor-dark-gray');
              stroke: none;
              opacity: 0.7;
              shape-rendering: crispEdges; /* Sharper nodes */
              transition: fill 0.1s ease-in-out;
          }
          .react-flow__minimap-node.albor-minimap-node:hover {
              fill: theme('colors.albor-light-gray');
              opacity: 1;
          }
          .react-flow__minimap-node.albor-minimap-node.selected {
               fill: theme('colors.albor-orange');
               opacity: 1;
          }

          /* Style React Flow Background */
          .react-flow__background {
              background-color: theme('colors.albor-deep-space'); /* Match body background */
          }

          /* Custom Node Styles (Applied via Tailwind in components) */
          .albor-node {
              @apply bg-albor-bg-dark border border-albor-dark-gray/50 rounded-md p-2 shadow-md min-w-[150px];
          }
          .albor-node-header {
              @apply flex items-center space-x-2 pb-1 mb-1 border-b border-albor-dark-gray/30;
          }
          .albor-node-icon {
              @apply text-albor-orange;
          }
          .albor-node-name {
              @apply text-xs font-semibold text-albor-light-gray truncate;
          }
          .albor-node-body {
              @apply text-xs text-albor-dark-gray;
          }

          /* Drag & Drop Feedback */
          .drag-over .drag-over-target {
              opacity: 1;
          }

          /* --- Global Map View Styles --- */
          .global-map-view {
            /* Base styling */
          }
          .global-map-land {
            fill: var(--color-albor-dark-gray);
            stroke: var(--color-albor-bg-dark);
            stroke-width: 0.15;
            opacity: 0.3;
          }
          .global-map-graticule {
            stroke: var(--color-albor-dark-gray);
            stroke-width: 0.1;
            opacity: 0.4;
            pointer-events: none;
          }
           .global-map-graticule-major {
            stroke: var(--color-albor-dark-gray);
            stroke-width: 0.2;
            opacity: 0.6;
            pointer-events: none;
          }
          .global-map-marker {
            cursor: pointer;
            transition: transform 0.15s ease-out;
          }
          .global-map-marker:hover {
            transform: scale(1.5);
          }
          .global-map-marker-icon {
            fill: var(--color-albor-orange);
            stroke: var(--color-albor-deep-space);
            stroke-width: 0.3;
            opacity: 0.9;
          }
          .global-map-marker-icon.gs {
             fill: var(--color-hologram-blue); /* Different color for GS */
          }
           .global-map-marker-icon.ue {
             fill: theme('colors.emerald.400'); /* Different color for UE */
          }
          .global-map-marker-icon.default {
             fill: var(--color-albor-light-gray);
          }
